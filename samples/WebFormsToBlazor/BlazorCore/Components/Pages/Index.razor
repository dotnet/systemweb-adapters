@page "/"

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

<div class="container-fluid">
    <EditForm Model="SessionData" OnSubmit="OnSubmit" class="col-md-4" FormName="Session">
        <div class="mb-2">
            <label for="session-message" class="form-label">Session Message:</label>
            <InputText id="session-message" class="form-control" @bind-Value="SessionData.SessionMessage" />
        </div>
        <div class="mb-2">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </EditForm>
</div>

@code {
    [SupplyParameterFromForm]
    private SessionData SessionData { get; set; } = new();

    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }

    protected override Task OnInitializedAsync()
    {
        if (HttpContext != null)
        {
            var webHttpContext = ((System.Web.HttpContext)HttpContext);
            if (webHttpContext != null && webHttpContext.Session != null && string.IsNullOrEmpty(SessionData.SessionMessage))
            {
                SessionData.SessionMessage = webHttpContext.Session["test-value"]?.ToString() ?? string.Empty;
            }
        }

        return base.OnInitializedAsync();
    }

    private void OnSubmit()
    {
        if (HttpContext != null)
        {
            var webHttpContext = ((System.Web.HttpContext)HttpContext);
            if (webHttpContext != null && webHttpContext.Session != null)
            {
                webHttpContext.Session["test-value"] = SessionData.SessionMessage;
            }
        }
    }
}
